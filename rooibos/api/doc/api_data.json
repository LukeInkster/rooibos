[  {    "type": "get",    "url": "/record/:id/:name",    "title": "Record",    "name": "record",    "group": "Data",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>The ID (PK) of the specified record</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>The name  of the record (default names will be like 'r-123456789')</p> "          }        ]      },      "examples": [        {          "title": "Example usage:",          "content": "curl -i https://mdid.domain.edu/api/record/2991/r-7388605",          "type": "curl"        }      ]    },    "success": {      "examples": [        {          "title": "Result of request ~/record/2991/r-7388605",          "content": "{\"record\":\n    {\n        \"name\": \"r-7388605\", \"title\": \"2\", \"image\": \"/media/get/2991/r-7388605/\",\n            \"metadata\": [\n                {\"value\": \"AH-CD0000201-890\", \"label\": \"ID\"}, {\"value\": \"2\", \"label\": \"Title\"},\n                {\"value\": \"Indiana, Robert\", \"label\": \"Creator\"},\n                {\"value\": \"1966-93\", \"label\": \"Creation Year\"},\n                {\"value\": \"Paint on aluminum.\", \"label\": \"Medium\"},\n                {\"value\": \"American\", \"label\": \"Culture\"},\n                {\"value\": \"Modern: 19th c. to present.\", \"label\": \"Period\"},\n                {\"value\": \"n/a\", \"label\": \"Style\"}, {\"value\": \"n/a\", \"label\": \"Country\"},\n                {\"value\": \"NO\", \"label\": \"Copyright Permission\"}\n            ],\n        \"thumbnail\": \"/media/thumb/2991/r-7388605/\",\n        \"id\": 2991\n    },\n    \"result\": \"ok\"\n}",          "type": "json"        }      ]    },    "filename": "./views.py",    "groupTitle": "Data"  },  {    "type": "get",    "url": "/presentations/currentuser/",    "title": "Presentations For Current User",    "name": "presentations_currentuser",    "group": "Presentations",    "version": "1.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "result",            "description": ""          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "presentations",            "description": "<p>List of Presentations owned by Request.User</p> "          }        ]      },      "examples": [        {          "title": "User has presentations",          "content": "{\n\"result\": \"ok\",\n\"presentations\": [\n    {\n        \"description\": null, \"name\": \"arch-search\", \"title\": \"arch search\",\n        \"created\": \"2005-05-12T13:42:48\", \"modified\": \"2005-05-12T13:42:48\", \"hidden\": false,\n        \"id\": 338,\n        \"tags\": [\n            \"MDID1 Slideshows\"\n        ]\n    },\n    {\n        \"description\": null, \"name\": \"catalonian-madness\", \"title\": \"Catalonian Madness!!!\",\n        \"created\": \"2006-10-13T15:58:02\", \"modified\": \"2009-09-11T11:43:25\",\n        \"hidden\": false, \"id\": 1464,\n        \"tags\": []\n    },\n  ]\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "User has no presentations",          "content": "{\"result\": \"ok\", \"presentations\": []}",          "type": "json"        },        {          "title": "User is not Logged In",          "content": "{\"result\": \"ok\", \"presentations\": []}",          "type": "json"        }      ]    },    "filename": "./views.py",    "groupTitle": "Presentations"  },  {    "type": "post",    "url": "/login",    "title": "Login",    "name": "login",    "group": "authentication",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>request.POST[&quot;username&quot;]</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>request.POST[&quot;password&quot;]</p> "          }        ]      }    },    "description": "<p>Authenticate a user</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "sessionid",            "description": "<p>Session ID token</p> "          },          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "userid",            "description": "<p>The ID (pk) of the authenticated user</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "result",            "description": "<p>Will be either 'ok', 'Login failed' or 'Invalid method. Use POST.'</p> "          }        ]      },      "examples": [        {          "title": "User is successfully logged in",          "content": "{\"sessionid\": \"b87ed91f693bc51927d522c60fc22ac9\", \"userid\": 37, \"result\": \"ok\"}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Login Failed",          "content": "{\"result\": \"Login failed\"}",          "type": "json"        },        {          "title": "Forgot to use Post",          "content": "{\"result\": \"Invalid method. Use POST.\"}",          "type": "json"        }      ]    },    "filename": "./views.py",    "groupTitle": "authentication"  },  {    "type": "get",    "url": "/logout",    "title": "Logout",    "name": "logout",    "group": "authentication",    "version": "1.0.0",    "description": "<p>Log a user out. Does not require POST.</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "result",            "description": "<p>Will be always be 'ok'</p> "          }        ]      },      "examples": [        {          "title": "User is successfully logged out",          "content": "{\"result\": \"ok\"}",          "type": "json"        }      ]    },    "filename": "./views.py",    "groupTitle": "authentication"  },  {    "type": "get",    "url": "/collections",    "title": "List User's Accessible Collections",    "name": "collection",    "group": "collections",    "version": "1.0.0",    "description": "<p>Returns a list of Collections obtained via filter_by_access(request.user, Collection)</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "collections",            "description": "<p>A list of the collections the current user has access to.</p> "          }        ]      },      "examples": [        {          "title": "User has access to a collection",          "content": "{\"collections\": [], \"result\": \"ok\"}",          "type": "json"        }      ]    },    "filename": "./views.py",    "groupTitle": "collections"  },  {    "type": "get",    "url": "/collection/:id",    "title": "Get Collection Information",    "name": "collections",    "group": "collections",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>Collection ID.</p> "          }        ]      }    },    "description": "<p>Returns information about a Collection obtained via filter_by_access(request.user, Collection.objects.filter(id=id))</p> ",    "success": {      "examples": [        {          "title": "User has access to a collection",          "content": "{\"collections\": [{\"description\": \"Personal images\", \"title\": \"Personal Images\", \"agreement\": null, \"children\": [], \"owner\": null, \"hidden\": false, \"id\": 1, \"name\": \"personal-images\"}], \"result\": \"ok\"}",          "type": "json"        },        {          "title": "Collection does not exist",          "content": "{\"collections\": [], \"result\": \"ok\"}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "collections",            "description": "<p>A list of the collections the sepecific user has access to.</p> "          }        ]      }    },    "filename": "./views.py",    "groupTitle": "collections"  }]